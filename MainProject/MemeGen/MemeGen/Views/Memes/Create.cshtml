@model MemeGen.Models.Meme

@{
    ViewBag.Title = "Create";
}
<<<<<<< HEAD

<h2>Create</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Meme</h4>
=======
@Styles.Render("~/Content/Site.css")
<h2>Create Meme</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="wrapper">
        <img id="meme" src="" style="width:300px; height:300px">
        <div id="topCaption" style="width: 280px"></div>
        <div id="bottomCaption"></div>
    </div>

    <div class="form-horizontal">
>>>>>>> BackUp
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Path, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
<<<<<<< HEAD
                <input type="file" name="photoGallary">
                <input type="image" name="uploadPhoto">
=======
                @Html.EditorFor(model => model.Path, new { htmlAttributes = new { @type = "file",
               @onchange = "previewFile()" } })

>>>>>>> BackUp
                @Html.ValidationMessageFor(model => model.Path, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TopText, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
<<<<<<< HEAD
                @Html.EditorFor(model => model.TopText, new { htmlAttributes = new { @class = "form-control" } })
=======
                @Html.EditorFor(model => model.TopText, new { htmlAttributes = new { @class = "form-control", @id = "topText", @onkeyup = "writeTop()" } })
>>>>>>> BackUp
                @Html.ValidationMessageFor(model => model.TopText, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BottomText, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
<<<<<<< HEAD
                @Html.EditorFor(model => model.BottomText, new { htmlAttributes = new { @class = "form-control" } })
=======
                @Html.EditorFor(model => model.BottomText, new { htmlAttributes = new { @class = "form-control", @id = "bottomText", @onkeyup = "writeBottom()" } })
>>>>>>> BackUp
                @Html.ValidationMessageFor(model => model.BottomText, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}
<<<<<<< HEAD
=======
<script>
   function previewFile(){
       var preview = document.querySelector('img'); //selects the query named img
       var file    = document.querySelector('input[type=file]').files[0]; //sames as here
       var reader  = new FileReader();

       reader.onloadend = function () {
           preview.src = reader.result;
       }

       if (file) {
           reader.readAsDataURL(file); //reads the data as a URL
       } else {
           preview.src = "";
       }
  }

  previewFile();  //calls the function named previewFile()
</script>

<script>
        function writeTop() {
            var x = document.getElementById("topText");
            document.getElementById("topCaption").innerHTML = x.value;
        }
        function writeBottom() {
            var x = document.getElementById("bottomText");
            document.getElementById("bottomCaption").innerHTML = x.value;
        }
</script>
>>>>>>> BackUp

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
<<<<<<< HEAD
}
=======
}
>>>>>>> BackUp
